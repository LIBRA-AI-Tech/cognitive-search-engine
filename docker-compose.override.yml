services:
  setup:
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - type: bind
        source: ./volume/certs
        target: /usr/share/public_cert
  api:
    build:
      context: .
      target: "base"
      args:
        VERSION: "${VERSION}"
    command: sh -c "python3 -m pip install --prefix=/usr/local -e . && geoss_search create-elastic-index --with-schema /usr/local/geoss_search/elastic_schema.yml && exec uvicorn --host 0.0.0.0 --port 8000 geoss_search:app --reload"
    volumes:
      - type: bind
        source: .
        target: /usr/local/geoss_search/
      - type: bind
        source: ./logs
        target: /var/local/geoss_search/logs
      - type: bind
        source: ${MODEL_PATH}
        target: /var/local/model
        read_only: true
      - type: bind
        source: ${INIT_DATA:-/dev/null}
        target: /var/local/metadata/data/
        read_only: true
      - type: bind
        source: ${INIT_DATA_SCHEMA:-/dev/null}
        target: /var/local/metadata/schema.yml
        read_only: true
    working_dir: /usr/local/geoss_search/
    environment:
      - FASTAPI_ENV=development

  worker:
    volumes:
      - type: bind
        source: .
        target: /usr/local/geoss_search
    working_dir: /usr/local/geoss_search/geoss_search
    command: sh -c "python3 -m pip install --prefix=/usr/local -e /usr/local/geoss_search && celery --app=tasks worker --loglevel=INFO --max-tasks-per-child=1"

  kibana:
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    networks:
      - shared-network
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=${KIBANA_SERVERNAME}
      - SERVER_PUBLICBASEURL=${KIBANA_PUBLICBASEURL}
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

volumes:
  kibanadata:
    driver: local
